/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jingleheimercalendar;

import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.SwingUtilities;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.Font;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;

/**
 *
 * @author Brandon
 */
public class MoreCategoryInfoPanel extends javax.swing.JPanel {
    Category category;
    /**
     * Creates new form NewJPanel1
     */
    public MoreCategoryInfoPanel(Category c) {
        category = c;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        setBackground(new java.awt.Color(0,0,0,0));
        setPreferredSize(new java.awt.Dimension(275, 300));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/collapesArrow32.png"))); // NOI18N
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeMouseClicked(evt);
            }
        });
        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        
        jPanel1.setLayout(null);
        jPanel1.setBackground(category.getSecondaryColor());
        jScrollPane1.setViewportView(jPanel1);
        

        if(UserCalendar.getInstance().getCategories().size()> 5){
            jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/deleteButton20.png"))); // NOI18N
        }else{
            jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cantdeleteButton20.png"))); // NOI18N

        }
        
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                if(UserCalendar.getInstance().getCategories().size()> 5){
                    deleteMouseClicked(evt);
                }
            }
        });
        jLabel1.setFont(JingleheimerCalendar.defaultFont.deriveFont(Font.BOLD, 18f));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText(category.getName());
        populateContent();
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel3))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>                        

    private void closeMouseClicked(java.awt.event.MouseEvent evt) {                                     
        JingleheimerCalendar f = (JingleheimerCalendar) SwingUtilities.getWindowAncestor(this);
        f.getGlassPane().setVisible(false);
    } 
    
    private void deleteMouseClicked(java.awt.event.MouseEvent evt) {  
       
        JingleheimerCalendar f = (JingleheimerCalendar) SwingUtilities.getWindowAncestor(this);
        final JDialog j = new JDialog();
        j.setTitle("Delete Category");
        j.setPreferredSize(new Dimension(500,150));
        JPanel text = new JPanel();
        text.setLayout(new BorderLayout());
        JLabel label = new JLabel("<html><p>Are you sure?<br>Deleting a category uncategorizes the current events in this category.</p></html>",SwingConstants.CENTER);
        text.add(label, BorderLayout.CENTER);
        JButton cancelButton = new JButton("No");
        JButton setButton = new JButton("Yes");
        //Lay out the buttons from left to right.
        JPanel buttonPane = new JPanel();
        buttonPane.setLayout(new BoxLayout(buttonPane, BoxLayout.LINE_AXIS));
        buttonPane.setBorder(BorderFactory.createEmptyBorder(0, 10, 10, 10));
        buttonPane.add(Box.createHorizontalGlue());
        buttonPane.add(setButton);
        buttonPane.add(Box.createRigidArea(new Dimension(10, 0)));
        buttonPane.add(cancelButton);
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j.setVisible(false);
            }
        });
        setButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserCalendar.getInstance().removeCategory(category);
                JingleheimerCalendar.refreshCategoryBar();
                j.setVisible(false);
            }
        });
        //Put everything together, using the content pane's BorderLayout.
        Container contentPane = j.getContentPane();
        contentPane.add(text, BorderLayout.CENTER);
        contentPane.add(buttonPane, BorderLayout.PAGE_END);
        j.setLocationRelativeTo(f);
        j.pack();
        j.setVisible(true);
        f.getGlassPane().setVisible(false);
        
    }

    public void populateContent(){
        Calendar c = Calendar.getInstance();
        c.set(Calendar.HOUR_OF_DAY, 0);
        c.set(Calendar.MILLISECOND, 0);
        c.set(Calendar.SECOND, 0);
        c.set(Calendar.MINUTE, 0);
        if(!UserCalendar.getInstance().getEventsByCategoryForInfo(category,c.getTime()).isEmpty()){
            ArrayList<Event> e = UserCalendar.getInstance().getEventsByCategoryForInfo(category,c.getTime());
            Color color;
            jPanel1.setLayout(new BoxLayout(jPanel1, BoxLayout.Y_AXIS)); 
            Date previousDate = null;
            SimpleDateFormat df = new SimpleDateFormat("MM/dd/yy");
                    JLabel j1 = new JLabel(df.format(e.get(0).getDate()));
                    previousDate = e.get(0).getDate();
                    j1.setFont(JingleheimerCalendar.defaultFont.deriveFont(Font.BOLD, 13f));
                    j1.setForeground(new Color(69,69,69));
                    j1.setAlignmentX(Component.LEFT_ALIGNMENT);

                    jPanel1.add(j1);
                    jPanel1.add(Box.createRigidArea(new Dimension(0,1)));
                    int rowNum = 0;
            for (int i = 0; i < e.size(); i++) {
                if(!previousDate.equals(e.get(i).getDate())){
        
                    jPanel1.add(Box.createRigidArea(new Dimension(0,10)));
                    JLabel j = new JLabel(df.format(e.get(i).getDate()));
                    j.setFont(JingleheimerCalendar.defaultFont.deriveFont(Font.PLAIN, 24f));
                    j.setAlignmentX(Component.LEFT_ALIGNMENT);
                    j.setForeground(new Color(69,69,69));
                    previousDate = e.get(i).getDate();
                    jPanel1.add(j);
                    jPanel1.add(Box.createRigidArea(new Dimension(0,1)));
                    rowNum = 0;
                }
                if(rowNum%2 == 0){
                     color = category.getSecondaryColor();
                }else{
                    color = new Color(category.getCategoryColor().getRed(),category.getCategoryColor().getGreen(),category.getCategoryColor().getBlue(), 45);

                }
                CatInfoRow aEvent = new CatInfoRow(e.get(i).getName(),e.get(i).getStartTime(),e.get(i).getEndTime(),color);
                aEvent.setAlignmentX(Component.LEFT_ALIGNMENT);

                jPanel1.add(aEvent); 
                rowNum++;
                
                  }
            

            
        }else{
            jPanel1.setLayout(new BorderLayout());
            JLabel noEvents = new JLabel("No Events in this Category.");
            noEvents.setForeground(new Color (69,69,69));
            noEvents.setHorizontalAlignment(SwingConstants.CENTER);
            noEvents.setVerticalAlignment(SwingConstants.CENTER);
            jPanel1.add(noEvents,BorderLayout.CENTER);
        }
        
    }
    
    // Variables declaration - do not modify                     
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration                   
}
